apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ .Values.ingressName }}
  labels:
    f5type: virtual-server
  annotations:
    virtual-server.f5.com/ip: "{{ .Values.vsip }}"
    virtual-server.f5.com/http-port: "{{ .Values.vsport }}"
    virtual-server.f5.com/partition: "{{ .Values.Partition }}"
    virtual-server.f5.com/balance: "{{ .Values.Balance }}"
    {{- if (eq .Values.healthprotocol "gateway_icmp") }}
    virtual-server.f5.com/health: |
       [
        {
          "interval": 5,
          "timeout":  16
        }
      ]
    {{- else if (eq .Values.healthprotocol "tcp") }}
    virtual-server.f5.com/health: |
       [
        {
          "interval": 5,
          "timeout":  16
        }
      ]
    {{- else if (eq .Values.healthprotocol "http") }}
    virtual-server.f5.com/health: |
       [
        {
          "path":     "/",
          "send":     "HTTP GET /",
          "interval": 5,
          "timeout":  16
        }
      ]
    {{- else if (eq .Values.healthprotocol "https") }}
    virtual-server.f5.com/health: |
       [
        {
          "path":     "/",
          "send":     "HTTP GET /",
          "interval": 5,
          "timeout":  16
        }
      ]
    {{- end }}
spec:
{{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
  rules:
    - host: {{ .Values.ingress.hosts.host }}
      http:
        paths:
          - path: {{ .Values.ingress.hosts.path }}
            backend:
              serviceName: {{ $serviceName }}
              servicePort: {{ $svcPort }}
{{- end }}
